qmc
const matrix A1 = [(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4);(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4);(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4)];
const matrix A2 = [0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0];
const matrix A3 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,1;0,0,0,0,0,0,1,0];
const matrix A4 = [0,0,(1 / 2),(1 / 2),0,0,(1 / 2),(1 / 2);0,0,(1 / 2),(-1 / 2),0,0,(1 / 2),(-1 / 2);(1 / 2),(1 / 2),0,0,(1 / 2),(1 / 2),0,0;(1 / 2),(-1 / 2),0,0,(1 / 2),(-1 / 2),0,0;0,0,(1 / 2),(1 / 2),0,0,(-1 / 2),(-1 / 2);0,0,(1 / 2),(-1 / 2),0,0,(-1 / 2),(1 / 2);(1 / 2),(1 / 2),0,0,(-1 / 2),(-1 / 2),0,0;(1 / 2),(-1 / 2),0,0,(-1 / 2),(1 / 2),0,0];
const matrix A5 = [0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2);(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0];
const matrix A6 = [0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0];
const matrix A7 = [(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0;0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2)];
const matrix A8 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0];
const matrix A9 = [0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2);(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0];
const matrix A10 = [0,0,(sqrt(2) / 2),0,0,0,(sqrt(2) / 2),0;0,0,0,(sqrt(2) / 2),0,0,0,(sqrt(2) / 2);(sqrt(2) / 2),0,0,0,(sqrt(2) / 2),0,0,0;0,(sqrt(2) / 2),0,0,0,(sqrt(2) / 2),0,0;0,0,(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2),0;0,0,0,(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2);(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2),0,0,0;0,(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2),0,0];
const matrix A11 = [(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0];
const matrix A12 = [0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2)];
const matrix A13 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0];
const matrix A14 = [0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1];
const matrix A15 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0];
const matrix A16 = [0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1];
module test
  s: [0..16] init 0;
  [] (s = 0) -> <<A1>> : (s' = 1);
  [] (s = 1) -> <<A2>> : (s' = 2);
  [] (s = 2) -> <<A3>> : (s' = 3);
  [] (s = 3) -> <<A4>> : (s' = 4);
  [] (s = 4) -> <<A5>> : (s' = 5);
  [] (s = 5) -> <<A6>> : (s' = 6);
  [] (s = 6) -> <<A7>> : (s' = 7);
  [] (s = 7) -> <<A8>> : (s' = 8);
  [] (s = 8) -> <<A9>> : (s' = 9);
  [] (s = 9) -> <<A10>> : (s' = 10);
  [] (s = 10) -> <<A11>> : (s' = 11) + <<A12>> : (s' = 12);
  [] (s = 11) -> <<A13>> : (s' = 13) + <<A14>> : (s' = 14);
  [] (s = 12) -> <<A15>> : (s' = 15) + <<A16>> : (s' = 16);
  [] (s = 13) -> (s' = 13);
  [] (s = 14) -> (s' = 14);
  [] (s = 15) -> (s' = 15);
  [] (s = 16) -> (s' = 16);
endmodule
---
1: Gate "H" [] [3], Gate "H" [] [2], Gate "H" [] [1]
2: Gate "not" [1,2] [3]
3: Gate "H" [] [3], Gate "H" [] [2], Gate "H" [] [1]
4: Gate "X" [] [2], Gate "X" [] [1]
5: Gate "H" [] [2]
6: Gate "not" [1] [2]
7: Gate "X" [] [1], Gate "H" [] [2]
8: Gate "H" [] [1], Gate "X" [] [2]
9: Measure 1, Gate "H" [] [2]
10: Measure 2
---
qmc
const matrix A1 = [(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4);(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4);(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4)];
const matrix A2 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,1;0,0,0,0,0,0,1,0];
const matrix A3 = [(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4);(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4);(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4);(sqrt(2) / 4),((-1 * sqrt(2)) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4),(sqrt(2) / 4),(sqrt(2) / 4),((-1 * sqrt(2)) / 4)];
const matrix A4 = [0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0];
const matrix A5 = [(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0;0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2)];
const matrix A6 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0];
const matrix A7 = [0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2);(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0];
const matrix A8 = [0,0,(sqrt(2) / 2),0,0,0,(sqrt(2) / 2),0;0,0,0,(sqrt(2) / 2),0,0,0,(sqrt(2) / 2);(sqrt(2) / 2),0,0,0,(sqrt(2) / 2),0,0,0;0,(sqrt(2) / 2),0,0,0,(sqrt(2) / 2),0,0;0,0,(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2),0;0,0,0,(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2);(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2),0,0,0;0,(sqrt(2) / 2),0,0,0,((-1 * sqrt(2)) / 2),0,0];
const matrix A9 = [(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,(sqrt(2) / 2),0,0,0,0;(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0,0;0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0];
const matrix A10 = [0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,(sqrt(2) / 2);0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2),0;0,0,0,0,0,(sqrt(2) / 2),0,((-1 * sqrt(2)) / 2)];
const matrix A11 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0];
const matrix A12 = [0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1];
const matrix A13 = [1,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,1,0,0,0;0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0];
const matrix A14 = [0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0;0,0,0,1,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,1];
module test
  s: [0..14] init 0;
  [] (s = 0) -> <<A1>> : (s' = 1);
  [] (s = 1) -> <<A2>> : (s' = 2);
  [] (s = 2) -> <<A3>> : (s' = 3);
  [] (s = 3) -> <<A4>> : (s' = 4);
  [] (s = 4) -> <<A5>> : (s' = 5);
  [] (s = 5) -> <<A6>> : (s' = 6);
  [] (s = 6) -> <<A7>> : (s' = 7);
  [] (s = 7) -> <<A8>> : (s' = 8);
  [] (s = 8) -> <<A9>> : (s' = 9) + <<A10>> : (s' = 10);
  [] (s = 9) -> <<A11>> : (s' = 11) + <<A12>> : (s' = 12);
  [] (s = 10) -> <<A13>> : (s' = 13) + <<A14>> : (s' = 14);
  [] (s = 11) -> (s' = 11);
  [] (s = 12) -> (s' = 12);
  [] (s = 13) -> (s' = 13);
  [] (s = 14) -> (s' = 14);
endmodule
---
